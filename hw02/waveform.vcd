$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module sort_tb $end
  $var wire 32 6 NUM_VALS [31:0] $end
  $var wire 32 7 WIDTH [31:0] $end
  $var wire 32 4 in [31:0] $end
  $var wire 32 # out [31:0] $end
  $var wire 32 5 i [31:0] $end
  $scope module dut $end
   $var wire 32 6 NUM_VALS [31:0] $end
   $var wire 32 7 WIDTH [31:0] $end
   $var wire 32 4 A [31:0] $end
   $var wire 32 # B [31:0] $end
   $var wire 4 $ values[0] [3:0] $end
   $var wire 4 % values[1] [3:0] $end
   $var wire 4 & values[2] [3:0] $end
   $var wire 4 ' values[3] [3:0] $end
   $var wire 4 ( values[4] [3:0] $end
   $var wire 4 ) values[5] [3:0] $end
   $var wire 4 * values[6] [3:0] $end
   $var wire 4 + values[7] [3:0] $end
   $var wire 4 , sorted[0] [3:0] $end
   $var wire 4 - sorted[1] [3:0] $end
   $var wire 4 . sorted[2] [3:0] $end
   $var wire 4 / sorted[3] [3:0] $end
   $var wire 4 0 sorted[4] [3:0] $end
   $var wire 4 1 sorted[5] [3:0] $end
   $var wire 4 2 sorted[6] [3:0] $end
   $var wire 4 3 sorted[7] [3:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 8 j [31:0] $end
    $var wire 32 9 k [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b11001001011101110111011001000011 #
b0111 $
b1001 %
b0111 &
b0110 '
b0111 (
b0011 )
b1100 *
b0100 +
b1100 ,
b1001 -
b0111 .
b0111 /
b0111 0
b0110 1
b0100 2
b0011 3
b01111001011101100111001111000100 4
b00000000000000000000000000000000 5
b00000000000000000000000000001000 6
b00000000000000000000000000000100 7
b00000000000000000000000000000111 8
b00000000000000000000000000000001 9
#64
b00000000000000000000000000001000 5
